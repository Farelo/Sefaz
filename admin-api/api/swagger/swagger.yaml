swagger: '2.0'
info:
  version: 0.0.1
  description: >-
    An project that has how the main functionality recover packings on the
    system through Beacons and Checkpoints
  title: Reciclapac API Documentation
  contact:
    name: David W. F. Santos
    email: david.santos@pe.senai.br
    url: 'http://pe.senai.br'
host: 'localhost:3000'
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
tags:
  - name: User
    description: All information about your Users
securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization
paths:
  '/user/retrieve/{user_id}':
    x-swagger-router-controller: user_controller
    get:
      tags:
        - User
      summary: Get a user on the system
      description: ''
      operationId: user_read
      security:
        - Bearer: []
      parameters:
        - in: path
          name: user_id
          description: The code that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/user/auth/{password}/{email}':
    x-swagger-router-controller: user_controller
    get:
      tags:
        - User
      summary: Auth a user on the system
      description: ''
      operationId: user_auth
      parameters:
        - in: path
          name: password
          description: The password that needs to be fetched
          required: true
          type: string
        - in: path
          name: email
          description: The email that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/user/list/pagination/{limit}/{page}':
    x-swagger-router-controller: user_controller
    get:
      tags:
        - User
      summary: Get all users on the system by pagination
      description: ''
      operationId: user_listPagination
      security:
        - Bearer: []
      parameters:
        - in: path
          name: limit
          description: The limit of users that will be returned
          required: true
          type: string
        - in: path
          name: page
          description: The especific page that returns users related a this page
          required: true
          type: string
        - in: query
          name: attr
          description: The especific attr that returns packings related a this attr
          required: false
          type: string
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/create:
    x-swagger-router-controller: user_controller
    post:
      tags:
        - User
      summary: Add a new user to the system
      description: ''
      operationId: user_create
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          description: user object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/user/delete/{user_id}':
    x-swagger-router-controller: user_controller
    delete:
      tags:
        - User
      summary: Remove a user on the system
      description: ''
      operationId: user_delete
      security:
        - Bearer: []
      parameters:
        - in: path
          name: user_id
          description: The code that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/user/update/{user_id}':
    x-swagger-router-controller: user_controller
    put:
      tags:
        - User
      summary: Update a user on the system
      description: ''
      operationId: user_update
      security:
        - Bearer: []
      parameters:
        - in: path
          name: user_id
          description: The code that needs to be fetchede
          required: true
          type: string
        - in: body
          name: body
          description: The user object that will to be modified
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  ErrorResponse:
    type: object
    properties:
      jsonapi:
        type: object
        description: a short comment
    required:
      - jsonapi
  SuccessResponse:
    type: object
    properties:
      jsonapi:
        type: object
        description: a short comment
    required:
      - jsonapi
  User:
    type: object
    properties:
      company:
        type: string
      url:
        type: string
      profile:
        type: string
      email:
        type: string
      port:
        type: string
      password:
        type: string
