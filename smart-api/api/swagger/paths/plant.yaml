paths:
#-------------------------------------------START CRUD PLANT----------------------------------
  /plant/retrieve/{plant_id}:
      x-swagger-router-controller: plant_controller
      get:
        tags:
          - "Plant"
        summary: "Retrieve a plant from the system"
        description: ""
        operationId: plant_read
        security:
          - Bearer: []
        parameters:
        - in: "path"
          name: "plant_id"
          description: "Retrieve a plant related this plant id"
          required: true
          type: string
        responses:
          200:
            description: "Successfully"
            schema:
              $ref: "#/definitions/SuccessResponse"
          400:
            description: "Client Error"
            schema:
              $ref: "#/definitions/Error400"
          500:
            description: "Server Error"
            schema:
              $ref: "#/definitions/Error500"
          default:
            description: "Error"
            schema:
              $ref: "#/definitions/ErrorResponse"
  /plant/retrieve/name/{plant_name}:
      x-swagger-router-controller: plant_controller
      get:
        tags:
          - "Plant"
        summary: "Retreive a plant from the system by plant name"
        description: ""
        operationId: plant_read_by_name
        security:
          - Bearer: []
        parameters:
        - in: "path"
          name: "plant_name"
          description: "Retrieve a plant related this plant name"
          required: true
          type: string
        responses:
          200:
            description: "Successfully"
            schema:
              $ref: "#/definitions/SuccessResponse"
          400:
            description: "Client Error"
            schema:
              $ref: "#/definitions/Error400"
          500:
            description: "Server Error"
            schema:
              $ref: "#/definitions/Error500"
          default:
            description: "Error"
            schema:
              $ref: "#/definitions/ErrorResponse"
  /plant/list/pagination/{limit}/{page}:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Retrieve all plants from the system with pagination"
      description: ""
      operationId: plant_listPagination
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "limit"
        description: "The limit of plants that will be returned"
        required: true
        type: string
      - in: "path"
        name: "page"
        description: "Retrieve plants related this page"
        required: true
        type: string
      - in: "query"
        name: "attr"
        description: "Retrieve plants related this supplier id"
        required: false
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/nobinded/{code}/{supplier}/{project}:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Retrieve all plants from the system no binded about route"
      description: ""
      operationId: list_all_nobinded
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "code"
        description: "Retrieve plants related this page"
        required: true
        type: string
      - in: "path"
        name: "supplier"
        description: "Retrieve plants related this supplier id"
        required: true
        type: string
      - in: "path"
        name: "project"
        description: "Retrieve plants related this project id"
        required: true
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/all:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Retrieve all plants from the system without supplier and logistic operator"
      description: ""
      operationId: list_all
      security:
        - Bearer: []
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/general:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Retrieve all plants from the system"
      description: ""
      operationId: list_all_general
      security:
        - Bearer: []
      parameters:
      - in: "query"
        name: "attr"
        description: "Retrieve plants related this supplier id"
        required: false
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/general/logistic/{logistic_id}:
    x-swagger-router-controller: plant_controller
    post:
      tags:
        - "Plant"
      summary: "Retrieve all plants from the system by logistic"
      description: ""
      operationId: list_all_general_logistic
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "logistic_id"
        description: "Retrieve plants related this logistic operator id"
        required: true
        type: string
      - in: "body"
        name: "body"
        description: "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the plants"
        required: true
        schema:
          $ref: "#/definitions/ArraySupplier"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/create:
    x-swagger-router-controller: plant_controller
    post:
      tags:
      - "Plant"
      summary: "Add a new plant on the system"
      description: ""
      operationId: plant_create
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Sample of plant object that will be add to the system"
        required: true
        schema:
          $ref: "#/definitions/Plant"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/create/array:
    x-swagger-router-controller: plant_controller
    post:
      tags:
      - "Plant"
      summary: "Add a array of plants on the system"
      description: ""
      operationId: plant_create_array
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Sample of Plants Array object that will be add to the system"
        required: true
        schema:
          $ref: "#/definitions/ArrayPlant"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"


  /plant/delete/{plant_id}:
    x-swagger-router-controller: plant_controller
    delete:
      tags:
      - "Plant"
      summary: "Remove a plant from the system"
      description: ""
      operationId: plant_delete
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "plant_id"
        description: "Remove a plant related this plant id"
        required: true
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/update/{plant_id}:
    x-swagger-router-controller: plant_controller
    put:
      tags:
      - "Plant"
      summary: "Update a plant from the system"
      description: ""
      operationId: plant_update
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "plant_id"
        description: "Update a plant related this plant id"
        required: true
        type: string
      - in: "body"
        name: "body"
        description: "The plant object that will be modified"
        required: true
        schema:
          $ref: "#/definitions/Plant"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"

#-------------------------------------------FINISH CRUD PLANT----------------------------------
