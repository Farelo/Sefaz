paths:
#-------------------------------------------START CRUD TAGS ----------------------------------
  /tags/retrieve/{tags_id}:
      x-swagger-router-controller: tags_controller
      get:
        tags:
          - "Tag"
        summary: "Retreive a tag from the system"
        description: ""
        operationId: tags_read
        security:
          - Bearer: []
        parameters:
        - in: "path"
          name: "tags_id"
          description: "Retrieve a tag related this tag id"
          required: true
          type: string
        responses:
          200:
            description: "Successfully"
            schema:
              $ref: "#/definitions/SuccessResponse"
          400:
            description: "Client Error"
            schema:
              $ref: "#/definitions/Error400"
          500:
            description: "Server Error"
            schema:
              $ref: "#/definitions/Error500"
          default:
            description: "Error"
            schema:
              $ref: "#/definitions/ErrorResponse"
  /tags/list/pagination/{limit}/{page}:
    x-swagger-router-controller: tags_controller
    get:
      tags:
        - "Tag"
      summary: "Retrieve all tags from the system with pagination that were binded and no binded with packings"
      description: ""
      operationId: tags_list_pagination
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "limit"
        description: "The limit of tagss that will be returned"
        required: true
        type: string
      - in: "path"
        name: "page"
        description: "Retrieve tags related this page"
        required: true
        type: string
      - in: "query"
        name: "attr"
        description: "Retrieve tags related this supplier id"
        required: false
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tags/list/all/nobinded:
    x-swagger-router-controller: tags_controller
    get:
      tags:
        - "Tag"
      summary: "Retrieve all tags from the system that does not was still binded with the packing"
      description: ""
      operationId: tags_list_all_no_binded
      security:
        - Bearer: []
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tags/create:
    x-swagger-router-controller: tags_controller
    post:
      tags:
      - "Tag"
      summary: "Add a new tags to the system"
      description: ""
      operationId: tags_create
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Sample of tag object that will be add to the system"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tags/create/array:
    x-swagger-router-controller: tags_controller
    post:
      tags:
      - "Tag"
      summary: "Add a array of tags on the system"
      description: ""
      operationId: tags_create_array
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Sample of array tags object that will be add to the system"
        required: true
        schema:
          $ref: "#/definitions/ArrayTag"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"


  /tags/delete/{tags_id}:
    x-swagger-router-controller: tags_controller
    delete:
      tags:
      - "Tag"
      summary: "Remove a tags from the system"
      description: ""
      operationId: tags_delete
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "tags_id"
        description: "Remove tag related this tag id"
        required: true
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tags/update/{tags_id}:
    x-swagger-router-controller: tags_controller
    put:
      tags:
      - "Tag"
      summary: "Update a tag from the system"
      description: ""
      operationId: tags_update
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "tags_id"
        description: "Update tag related this tag id"
        required: true
        type: string
      - in: "body"
        name: "body"
        description: "The tag object that will be modified"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"

#-------------------------------------------FINISH CRUD TAGS ----------------------------------
