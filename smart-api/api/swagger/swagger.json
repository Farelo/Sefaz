{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "description": "An project that has how the main functionality recover packings on the system through Beacons and Checkpoints",
    "title": "Reciclapac API Documentation",
    "contact": {
      "name": "David W. F. Santos",
      "email": "david.santos@pe.senai.br",
      "url": "http://pe.senai.br"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Plant",
      "description": "All information about your Plants"
    },
    {
      "name": "Inventory",
      "description": "All information about your Inventory"
    },
    {
      "name": "Inventory Logistic",
      "description": "All information about your Inventory to Op. Logistic"
    },
    {
      "name": "Profile",
      "description": "All information about your Profiles"
    },
    {
      "name": "Project",
      "description": "All information about your Projects"
    },
    {
      "name": "Supplier",
      "description": "All information about your Suppliers"
    },
    {
      "name": "Settings",
      "description": "All information about your Settings"
    },
    {
      "name": "Logistic Operator",
      "description": "All information about your Logistic Operators"
    },
    {
      "name": "Route",
      "description": "All information about your Routes"
    },
    {
      "name": "Department",
      "description": "All information about your Departments"
    },
    {
      "name": "Packing",
      "description": "All information about your Packings"
    },
    {
      "name": "Tag",
      "description": "All information about your Tags"
    },
    {
      "name": "Historic Packings",
      "description": "All information about your Historic Packings"
    },
    {
      "name": "Alerts",
      "description": "All information about your Alerts"
    },
    {
      "name": "GC16",
      "description": "All information about your GC16 registers"
    },
    {
      "name": "Upload",
      "description": "All information about your upload "
    },
    {
      "name": "CEP",
      "description": "Get address through CEP"
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "paths": {
    "/alert/retrieve/{packing_id}/{status}": {
      "x-swagger-router-controller": "alert_controller",
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieve a alert by status from the system",
        "description": "",
        "operationId": "alert_read_by_packing",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_id",
            "description": "Retrieve a alert related this packing id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "status",
            "description": "Retrieve a alert related this alert status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alerts/packing/{packing_id}": {
      "x-swagger-router-controller": "alert_controller",
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieve a alert by status from the system",
        "description": "",
        "operationId": "alert_packings",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_id",
            "description": "Retrieve a alert related this packing id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "alert_controller",
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieve all alerts from the system with pagination",
        "description": "",
        "operationId": "alert_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of alerts that will to be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieves alerts related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieves alerts related a this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/list/pagination/logistic/{limit}/{page}": {
      "x-swagger-router-controller": "alert_controller",
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieve all alerts from the system to logistic operator with pagination",
        "description": "",
        "operationId": "alert_list_pagination_logistic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of alerts that will to be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieves alerts related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Retrieves alerts related on this list of supplier id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/list/all/packing/{limit}/{page}/{code}/{project}/{supplier}/{status}": {
      "x-swagger-router-controller": "alert_controller",
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieve all alerts from the system with pagination",
        "description": "",
        "operationId": "alert_list_packing",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of alerts that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieves alerts related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieves alerts related this code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "status",
            "description": "Retrieves alerts related this slert status",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieves alerts related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Retrieves alerts related this project id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieves alerts related on this supplier id passed by query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/list/all/packing/logistic/{limit}/{page}/{code}/{project}/{supplier}/{status}": {
      "x-swagger-router-controller": "alert_controller",
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Retrieve all alerts from the system with pagination related the logistic operator",
        "description": "",
        "operationId": "alert_list_packing_logistic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of alerts that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieves alerts related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieves alerts related this code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "status",
            "description": "Retrieves alerts related this alert status",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieves alerts related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Retrieves alerts related this project id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Retrieves alerts related on this list of supplier id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/create": {
      "x-swagger-router-controller": "alert_controller",
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Add a new alert on the system",
        "description": "",
        "operationId": "alert_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of Alert object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/delete/{alert_id}": {
      "x-swagger-router-controller": "alert_controller",
      "delete": {
        "tags": [
          "Alerts"
        ],
        "summary": "Remove a alert on the system",
        "description": "",
        "operationId": "alert_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alert_id",
            "description": "Remove a specific alert related this alert id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/alert/update/{alert_id}": {
      "x-swagger-router-controller": "alert_controller",
      "put": {
        "tags": [
          "Alerts"
        ],
        "summary": "Update a alert on the system",
        "description": "",
        "operationId": "alert_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alert_id",
            "description": "Update a specific alert related this alert id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The alert object that will  be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/address/{cep}": {
      "x-swagger-router-controller": "cep_correios_controller",
      "get": {
        "tags": [
          "CEP"
        ],
        "summary": "Get address through a specfic CEP",
        "description": "",
        "operationId": "get_CEP",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cep",
            "description": "Retrieve a address related this postal code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/retrieve/{department_id}": {
      "x-swagger-router-controller": "department_controller",
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve a department from the system",
        "description": "",
        "operationId": "department_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "description": "Retrieve a department related this department id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/retrieve/name/{department_name}": {
      "x-swagger-router-controller": "department_controller",
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve a department by name from the system",
        "description": "",
        "operationId": "department_read_by_name",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_name",
            "description": "Retrieve a department related this departament name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "department_controller",
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve all departments fromt the system with pagination",
        "description": "",
        "operationId": "department_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of departments that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve departments related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve departments related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/list/pagination/{limit}/{page}/plant/{id}": {
      "x-swagger-router-controller": "department_controller",
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve all departments from the system by plant with pagination",
        "description": "",
        "operationId": "department_list_pagination_by_plant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of departments that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve departments related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Retrieve departments related this plant id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/list/all": {
      "x-swagger-router-controller": "department_controller",
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve all departments from the system",
        "description": "",
        "operationId": "department_list_all",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/list/department/plant": {
      "x-swagger-router-controller": "department_controller",
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Retrieve all departments from the system by plant",
        "description": "",
        "operationId": "list_department_by_plant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/create": {
      "x-swagger-router-controller": "department_controller",
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Add a new department on the system",
        "description": "",
        "operationId": "department_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of Department object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/create/array": {
      "x-swagger-router-controller": "department_controller",
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Add a department array on the system",
        "description": "",
        "operationId": "department_create_array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "department array that wiil be add on the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrayDepartment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/delete/{department_id}": {
      "x-swagger-router-controller": "department_controller",
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Remove a department from the system",
        "description": "",
        "operationId": "department_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "description": "Remove a department related this department id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/department/update/{department_id}": {
      "x-swagger-router-controller": "department_controller",
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Update a department from the system",
        "description": "",
        "operationId": "department_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "description": "Update a department related this department id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The department object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/gc16/retrieve/{id}": {
      "x-swagger-router-controller": "gc16_controller",
      "get": {
        "tags": [
          "GC16"
        ],
        "summary": "Retrieve a GC16 from the system",
        "description": "",
        "operationId": "gc16_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Retrieve a gc16 related this gc16 id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/gc16/list/all": {
      "x-swagger-router-controller": "gc16_controller",
      "get": {
        "tags": [
          "GC16"
        ],
        "summary": "Retrieve all registers GC16 on the system",
        "description": "",
        "operationId": "gc16_list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/gc16/list/all/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "gc16_controller",
      "get": {
        "tags": [
          "GC16"
        ],
        "summary": "Retrieve all registers GC16 from the system with pagination",
        "description": "",
        "operationId": "gc16_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of registers GC16 that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve registers GC16 related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve registers GC16 related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/gc16/create": {
      "x-swagger-router-controller": "gc16_controller",
      "post": {
        "tags": [
          "GC16"
        ],
        "summary": "Add a new gc16 register on the system",
        "description": "",
        "operationId": "gc16_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of GC16 register object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GC16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/gc16/delete/{id}": {
      "x-swagger-router-controller": "gc16_controller",
      "delete": {
        "tags": [
          "GC16"
        ],
        "summary": "Remove a gc16 register from the system",
        "description": "",
        "operationId": "gc16_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Remove a department related this gc16 id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/gc16/update/{id}": {
      "x-swagger-router-controller": "gc16_controller",
      "put": {
        "tags": [
          "GC16"
        ],
        "summary": "Update a gc16 register from the system",
        "description": "",
        "operationId": "gc16_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Update a department related this gc16 id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The GC16 object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GC16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historicpackings/retrieve/{historic_packings_id}": {
      "x-swagger-router-controller": "historic_packings_controller",
      "get": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Retrieve a historic packings from the system",
        "description": "",
        "operationId": "historic_packings_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "historic_packings_id",
            "description": "Retrieve a historic packing related this historic packing id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historicpackings/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "historic_packings_controller",
      "get": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Retrieve all historic packing from the system with pagination",
        "description": "",
        "operationId": "historic_packings_listPagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of historic that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve historic related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historicpackings/list/all": {
      "x-swagger-router-controller": "historic_packings_controller",
      "get": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Retrieve all historic packing from the system",
        "description": "",
        "operationId": "historic_packings_list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historicpackings/create": {
      "x-swagger-router-controller": "historic_packings_controller",
      "post": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Add a new historic packing on the system",
        "description": "",
        "operationId": "historic_packings_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of Historic Packing object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoricPackings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historicpackings/delete/{historic_packings_id}": {
      "x-swagger-router-controller": "historic_packings_controller",
      "delete": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Remove a historic packing from the system",
        "description": "",
        "operationId": "historic_packings_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "historic_packings_id",
            "description": "Remove a historic packing related this historic id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historicpackings/update/{historic_packings_id}": {
      "x-swagger-router-controller": "historic_packings_controller",
      "put": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Update a historic packing from the system",
        "description": "",
        "operationId": "historic_packings_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "historic_packings_id",
            "description": "Update a historic related this historic id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Hisotric packing object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoricPackings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/historic/movement/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "historic_packings_controller",
      "get": {
        "tags": [
          "Historic Packings"
        ],
        "summary": "Retrieve all historic packing from the system with pagination",
        "description": "",
        "operationId": "historic_packings_listPagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of historic that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve historic related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "packingId",
            "description": "Retrieve historic related this packingId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "supplierId",
            "description": "Retrieve historic related this supplierId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "packing_code",
            "description": "Retrieve historic related this packing_code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Retrieve historic related this status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "serial",
            "description": "Retrieve historic related this serial",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/upload/tag": {
      "x-swagger-router-controller": "import_controller",
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Uploads a file.",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadTag",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file that will be uploaded with information about tag. It needs only code tag as information on header of your excel."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/upload/project": {
      "x-swagger-router-controller": "import_controller",
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "The file that will be uploaded with information about project. It needs only project name as information on header of your excel.",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadProject",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/upload/plant": {
      "x-swagger-router-controller": "import_controller",
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "The file that will be uploaded with information about plant. It needs plant name, lat(latitude) and lng(longitude) as information on header of your excel.",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadPlant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/upload/department": {
      "x-swagger-router-controller": "import_controller",
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "The file that will be uploaded with information about department. It needs department name, lat(latitude) , lng(longitude) and plant name related to this department as information on header of your excel.",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadDepartment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/upload/packing": {
      "x-swagger-router-controller": "import_controller",
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Uploads a file to department.",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadPacking",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file that will be uploaded with information about packing. It needs a supplier name, project name, duns related this supplier, code to this packing, serial to this packing, type to this packing, capacity to this packing, weight to this packing, width to this packing, height to this packing and length to this packing  as information on header of your excel."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/upload/route": {
      "x-swagger-router-controller": "import_controller",
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "Uploads a file to department.",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "uploadRoute",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file that will be uploaded with information about route. It needs a supplier name, project name, duns related this supplier, name of the factory plant and code packing as information on header of your excel."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/logistic/general/{limit}/{page}": {
      "x-swagger-router-controller": "inventory_logistic",
      "post": {
        "tags": [
          "Inventory Logistic"
        ],
        "summary": "Retrieve all information about equipaments on the system related to logistic operator with pagination and without some filter. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "general_inventory_packing",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be Retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/logistic/permanence/{limit}/{page}/{code}": {
      "x-swagger-router-controller": "inventory_logistic",
      "post": {
        "tags": [
          "Inventory Logistic"
        ],
        "summary": "Retrieve all information about permanence of the equipaments on the system related to logistic operator with pagination and filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_permanence",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/logistic/quantity/{limit}/{page}/{code}": {
      "x-swagger-router-controller": "inventory_logistic",
      "post": {
        "tags": [
          "Inventory Logistic"
        ],
        "summary": "Retrieve all information about quantity of the equipaments  on the system related to logistic operator with pagination and filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "quantity_inventory",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/logistic/packing/historic/{limit}/{page}/{serial}/{code}": {
      "x-swagger-router-controller": "inventory_logistic",
      "post": {
        "tags": [
          "Inventory Logistic"
        ],
        "summary": "Retrieve all information about equipaments hisotric  on the system related to logistic operator with pagination and filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_packing_historic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "serial",
            "description": "Retrieve inventory related this packing serial",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/logistic/battery/{limit}/{page}": {
      "x-swagger-router-controller": "inventory_logistic",
      "post": {
        "tags": [
          "Inventory Logistic"
        ],
        "summary": "Retrieve all information about battery level of the equipaments on the system related to logistic operator  with pagination and filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_battery",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/logistic/general/packings/{limit}/{page}": {
      "x-swagger-router-controller": "inventory_logistic",
      "post": {
        "tags": [
          "Inventory Logistic"
        ],
        "summary": "Retrieve all information about historic equipaments on the system related to logistic operator with pagination without someone filter. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_packings",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be Retrieveed",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/detailed/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information detailed about the packages",
        "description": "",
        "operationId": "detailed_inventory",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of information about packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Return inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "supplier_id",
            "description": "Filter the packages by supplier",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "package_code",
            "description": "Filter the packages by code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/detailed/csv": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information detailed about the packages",
        "description": "",
        "operationId": "detailed_inventory_csv",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "supplier_id",
            "description": "Filter the packages by supplier",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "package_code",
            "description": "Filter the packages by code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/general/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about equipaments on the system with pagination and without some filter. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "general_inventory_packing",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of information about packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Return inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Return inventory related this supplier",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/permanence/{limit}/{page}/{code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about permancence of the equipaments on the system with pagination and some filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_permanence",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/absence/{limit}/{page}/{code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about permancence of the equipaments on the system with pagination and some filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_absence",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve inventory related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "plant",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "time",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "serial",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/quantity/{limit}/{page}/{code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about quantity of the equipaments on the system with pagination and some filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "quantity_inventory",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Return inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Return inventory related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/packing/historic/{limit}/{page}/{serial}/{code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about historic of the equipaments on the system with pagination and  by equipament serial. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_packing_historic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Return inventory related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "serial",
            "description": "The especific page that returns packings related a this serial",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "The especific code that returns packings related a this code",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve inventory related this supplier related to packing",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/battery/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about battery level of the equipaments on the system with pagination and  without some filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_battery",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "The especific page that returns packings related a this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "description": "The especific code that returns packings related a this code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/general/packings/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about equipament on the system with pagination and  without some filters. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "inventory_packings",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "The especific page that returns packings related a this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "description": "The especific code that returns packings related a this code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code_packing",
            "description": "The especific code packing that returns packings related a this code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/supplier/{limit}/{page}/{supplier}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about equipaments related with suplliers. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "supplier_inventory",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "The especific page that returns packings related a this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve inventory related this supplier id related to packing",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/inventory/plant/{limit}/{page}/{code}/{supplier}/{project}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieve all information about  equipaments by plant on the system with pagination. Groups equipaments with the same code, supplier and project to generate inventory",
        "description": "",
        "operationId": "geraneral_inventory_packing_by_plant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "The especific page that returns packings related a this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "The especific code that returns packings related a this code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve inventory related this supplier related to packing",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "The especific project id that returns packings related a this project",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logistic_operator/retrieve/{logistic_operator_id}": {
      "x-swagger-router-controller": "logistic_operator_controller",
      "get": {
        "tags": [
          "Logistic Operator"
        ],
        "summary": "Retrieve a logistic operator from the system",
        "description": "",
        "operationId": "logistic_operator_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logistic_operator_id",
            "description": "Retrieve a logistic operato related this logistic operator id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logistic_operator/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "logistic_operator_controller",
      "get": {
        "tags": [
          "Logistic Operator"
        ],
        "summary": "Retrieve all logistic operators on the system with pagination",
        "description": "",
        "operationId": "logistic_operator_listPagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of logistic operators that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve a logistic operators related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logistic_operator/create": {
      "x-swagger-router-controller": "logistic_operator_controller",
      "post": {
        "tags": [
          "Logistic Operator"
        ],
        "summary": "Add a new logistic operator on the system",
        "description": "",
        "operationId": "logistic_operator_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of logistic operator object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Logistic_operator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logistic_operator/delete/{logistic_operator_id}": {
      "x-swagger-router-controller": "logistic_operator_controller",
      "delete": {
        "tags": [
          "Logistic Operator"
        ],
        "summary": "Remove a logistic operator from the system",
        "description": "",
        "operationId": "logistic_operator_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logistic_operator_id",
            "description": "Remove a logistic related this logistic operator id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/logistic_operator/update/{logistic_operator_id}": {
      "x-swagger-router-controller": "logistic_operator_controller",
      "put": {
        "tags": [
          "Logistic Operator"
        ],
        "summary": "Update a logistic operator from the system",
        "description": "",
        "operationId": "logistic_operator_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logistic_operator_id",
            "description": "Update a logistic related this logistic operator id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The Logistic object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Logistic_operator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/retrieve/{packing_id}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve a packing from the system",
        "description": "",
        "operationId": "packing_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_id",
            "description": "Retrieve a packing related this packing id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/position/{code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve the packing position on the system",
        "description": "",
        "operationId": "packing_position",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve a packing position related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "initial_date",
            "description": "Retrieve a packing position ordered by initial date",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "final_date",
            "description": "Retrieve a packing position ordered by final date",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/retrieve/code/{code}/supplier/{supplier}/project/{project}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve a packing from the system by supplier, code and Project",
        "description": "",
        "operationId": "packing_read_by_supplierAndcodeAndProject",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve a packing related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Retrieve a packing related this project id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve a packing related this packing code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/retrieve/code/{code}/serial/{serial}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retreive a packing from the system by serial and code",
        "description": "",
        "operationId": "packing_read_by_codeAndSerial",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serial",
            "description": "Retrieve a packing related this serial",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve a packing related this code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retreive all packings from the system with pagination",
        "description": "",
        "operationId": "packing_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve packings related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve packings related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/pagination/{limit}/{page}/plant/{id}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve all packings from the system with pagination by plant",
        "description": "",
        "operationId": "packing_list_pagination_by_plant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve packings related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Retrieve packings related this plant id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/supplier/{id}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve all packings from the system by supplier",
        "description": "",
        "operationId": "packing_list_by_supplier",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Retrieve packings related this supplier id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/distinct": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve all distinct packings from the system ",
        "description": "",
        "operationId": "packing_list_distinct",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/distinct/suplier/{supplier}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve all distinct packings from the system by supplier ",
        "description": "",
        "operationId": "packing_list_distinct_by_supplier",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve packings related this supplier id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/distinct/logistic": {
      "x-swagger-router-controller": "packing_controller",
      "post": {
        "tags": [
          "Packing"
        ],
        "summary": "Retreive all distinct packings from the system by logistic ",
        "description": "",
        "operationId": "packing_list_distinct_by_logistic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the packings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/equals/{supplier}/{project}/{code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve all distinct packings from the system ",
        "description": "",
        "operationId": "packing_list_equals",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve packings related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve packings related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Retrieve packings related this project id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/code/{packing_code}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve all packings from the system by packing code",
        "description": "",
        "operationId": "list_by_code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_code",
            "description": "Retrieve packings related this packing code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/department/{department}/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retreive a packing list by department with pagination",
        "description": "",
        "operationId": "list_packing_department",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department",
            "description": "Retrieve packings related this department id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve packings related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/quantiy/per/plant/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve a quantity packing  per plant list  with pagination",
        "description": "",
        "operationId": "packing_per_plant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be retrieved",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve packings related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/quantity/per/condition": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retrieve a quantity packing by status",
        "description": "",
        "operationId": "packing_quantity_per_condition",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/all/nobinded/{supplier}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Retreive a packings no binded with some tag.",
        "description": "",
        "operationId": "list_packing_no_binded",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve packings related this supplier id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/create": {
      "x-swagger-router-controller": "packing_controller",
      "post": {
        "tags": [
          "Packing"
        ],
        "summary": "Add a new packing on the system",
        "description": "",
        "operationId": "packing_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of packing object that will be add to the system",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Packing"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/create/array": {
      "x-swagger-router-controller": "packing_controller",
      "post": {
        "tags": [
          "Packing"
        ],
        "summary": "Add a array packing on the system",
        "description": "",
        "operationId": "packing_create_array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of packing array object that will be add to the system",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Packing"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/delete/{packing_id}": {
      "x-swagger-router-controller": "packing_controller",
      "delete": {
        "tags": [
          "Packing"
        ],
        "summary": "Remove a packing from the system",
        "description": "",
        "operationId": "packing_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_id",
            "description": "Remove a packing related this packing id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/update/{packing_id}": {
      "x-swagger-router-controller": "packing_controller",
      "put": {
        "tags": [
          "Packing"
        ],
        "summary": "Update a packing from the system",
        "description": "",
        "operationId": "packing_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_id",
            "description": "Update a packing related this packing id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The packing object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Packing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/update/gc16/{code}/{supplier}/{project}": {
      "x-swagger-router-controller": "packing_controller",
      "put": {
        "tags": [
          "Packing"
        ],
        "summary": "Update a packing from the system using gc16",
        "description": "",
        "operationId": "packing_update_by_code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve packing related this packing code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Retrieve packing related this project id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve packing related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The packing object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Packing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/update/unset/{packing_code}": {
      "x-swagger-router-controller": "packing_controller",
      "put": {
        "tags": [
          "Packing"
        ],
        "summary": "Unset a field from packing from the system using code",
        "description": "",
        "operationId": "packing_update_unset_by_code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "packing_code",
            "description": "Update packing related this packing code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/update/all/{code}/{supplier}": {
      "x-swagger-router-controller": "packing_controller",
      "put": {
        "tags": [
          "Packing"
        ],
        "summary": "Update all packings on the system based on supplier and code",
        "description": "",
        "operationId": "packing_update_all_by_route",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Update packings related this code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Update packings related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The packing object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackingHash"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/packing/list/distinct/{code}/{limit}/{page}": {
      "x-swagger-router-controller": "packing_controller",
      "get": {
        "tags": [
          "Packing"
        ],
        "summary": "Update all packings on the system based on supplier and code",
        "description": "",
        "operationId": "packing_list_by_code",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Update packings related this code",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of packings that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve packings related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/retrieve/{plant_id}": {
      "x-swagger-router-controller": "plant_controller",
      "get": {
        "tags": [
          "Plant"
        ],
        "summary": "Retrieve a plant from the system",
        "description": "",
        "operationId": "plant_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plant_id",
            "description": "Retrieve a plant related this plant id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/retrieve/name/{plant_name}": {
      "x-swagger-router-controller": "plant_controller",
      "get": {
        "tags": [
          "Plant"
        ],
        "summary": "Retreive a plant from the system by plant name",
        "description": "",
        "operationId": "plant_read_by_name",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plant_name",
            "description": "Retrieve a plant related this plant name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "plant_controller",
      "get": {
        "tags": [
          "Plant"
        ],
        "summary": "Retrieve all plants from the system with pagination",
        "description": "",
        "operationId": "plant_listPagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of plants that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve plants related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve plants related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/list/nobinded/{code}/{supplier}/{project}": {
      "x-swagger-router-controller": "plant_controller",
      "get": {
        "tags": [
          "Plant"
        ],
        "summary": "Retrieve all plants from the system no binded about route",
        "description": "",
        "operationId": "list_all_nobinded",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Retrieve plants related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve plants related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Retrieve plants related this project id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/list/all": {
      "x-swagger-router-controller": "plant_controller",
      "get": {
        "tags": [
          "Plant"
        ],
        "summary": "Retrieve all plants from the system without supplier and logistic operator",
        "description": "",
        "operationId": "list_all",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/list/general": {
      "x-swagger-router-controller": "plant_controller",
      "get": {
        "tags": [
          "Plant"
        ],
        "summary": "Retrieve all plants from the system",
        "description": "",
        "operationId": "list_all_general",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve plants related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/list/general/logistic/{logistic_id}": {
      "x-swagger-router-controller": "plant_controller",
      "post": {
        "tags": [
          "Plant"
        ],
        "summary": "Retrieve all plants from the system by logistic",
        "description": "",
        "operationId": "list_all_general_logistic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "logistic_id",
            "description": "Retrieve plants related this logistic operator id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of the suppliers related to the logistic operator that will be used to Retrieve the information about the plants",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArraySupplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/create": {
      "x-swagger-router-controller": "plant_controller",
      "post": {
        "tags": [
          "Plant"
        ],
        "summary": "Add a new plant on the system",
        "description": "",
        "operationId": "plant_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of plant object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Plant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/create/array": {
      "x-swagger-router-controller": "plant_controller",
      "post": {
        "tags": [
          "Plant"
        ],
        "summary": "Add a array of plants on the system",
        "description": "",
        "operationId": "plant_create_array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of Plants Array object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrayPlant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/delete/{plant_id}": {
      "x-swagger-router-controller": "plant_controller",
      "delete": {
        "tags": [
          "Plant"
        ],
        "summary": "Remove a plant from the system",
        "description": "",
        "operationId": "plant_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plant_id",
            "description": "Remove a plant related this plant id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plant/update/{plant_id}": {
      "x-swagger-router-controller": "plant_controller",
      "put": {
        "tags": [
          "Plant"
        ],
        "summary": "Update a plant from the system",
        "description": "",
        "operationId": "plant_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plant_id",
            "description": "Update a plant related this plant id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The plant object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Plant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/retrieve/{profile_id}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve a profile from the system",
        "description": "",
        "operationId": "profile_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "profile_id",
            "description": "Retrieve profile related this profile id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/retrieve/email/{email}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve a profile from the system by email",
        "description": "",
        "operationId": "profile_read_by_email",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Retrieve profile related this email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/auth/{password}/{email}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Realyze auth on the system using password and email from profile",
        "description": "",
        "operationId": "profile_auth",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Recover profile related this email",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "password",
            "description": "Recover profile related this password",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/recover/{password}/{email}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Realyze recover of the profile using password and email from profile",
        "description": "",
        "operationId": "profile_recover",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Recover profile related this email",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "password",
            "description": "Recover profile related this password",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve all profilies from the system with pagination",
        "description": "",
        "operationId": "profile_listPagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of profilies that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve profiles related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/list/pagination/supplier/{limit}/{page}/{supplier}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve all profilies from the system with pagination by supplier",
        "description": "",
        "operationId": "profile_listPagination_supplier",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of profilies that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve profiles related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "supplier",
            "description": "Retrieve profiles related this supplier id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/list/pagination/logistic/{limit}/{page}/{logistic}": {
      "x-swagger-router-controller": "profile_controller",
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve all profilies from the system with pagination by logistic",
        "description": "",
        "operationId": "profile_listPagination_logistic",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of profiles that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve profiles related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "logistic",
            "description": "Retrieve profiles related this logistic operator id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/create": {
      "x-swagger-router-controller": "profile_controller",
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Add a new profile on the system",
        "description": "",
        "operationId": "profile_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of profile object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/delete/{profile_id}": {
      "x-swagger-router-controller": "profile_controller",
      "delete": {
        "tags": [
          "Profile"
        ],
        "summary": "Remove a profile from the system",
        "description": "",
        "operationId": "profile_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "profile_id",
            "description": "Remove a profile related this profile id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/profile/update/{profile_id}": {
      "x-swagger-router-controller": "profile_controller",
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Update a profile from the system",
        "description": "",
        "operationId": "profile_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "profile_id",
            "description": "Update a profile related this profile id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The profile object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/retrieve/{project_id}": {
      "x-swagger-router-controller": "project_controller",
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retrieve a project from the system",
        "description": "",
        "operationId": "project_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "Retrieve a project related this project id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "project_controller",
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retreive all projects from the system with pagination",
        "description": "",
        "operationId": "project_listPagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of projects that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve project related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve project related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/list/all": {
      "x-swagger-router-controller": "project_controller",
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retreive all projects from the system",
        "description": "",
        "operationId": "project_list",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/create": {
      "x-swagger-router-controller": "project_controller",
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add a new project on the system",
        "description": "",
        "operationId": "project_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of project object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/create/array": {
      "x-swagger-router-controller": "project_controller",
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add a array project on the system",
        "description": "",
        "operationId": "project_create_array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of array profile object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrayProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/delete/{project_id}": {
      "x-swagger-router-controller": "project_controller",
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Remove a project from the system",
        "description": "",
        "operationId": "project_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "Remove project related this project id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/project/update/{project_id}": {
      "x-swagger-router-controller": "project_controller",
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update a project from the system",
        "description": "",
        "operationId": "project_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "update project related this project id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The project object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/route/retrieve/{route_id}": {
      "x-swagger-router-controller": "route_controller",
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Retrieve a route from the system",
        "description": "",
        "operationId": "route_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "route_id",
            "description": "Retrieve a route related this route id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/route/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "route_controller",
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Retrieve all routes from the system with pagination",
        "description": "",
        "operationId": "route_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of routes that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve routes related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve routes related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/route/create": {
      "x-swagger-router-controller": "route_controller",
      "post": {
        "tags": [
          "Route"
        ],
        "summary": "Add a new route on the system",
        "description": "",
        "operationId": "route_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of route object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Route"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/route/create/array": {
      "x-swagger-router-controller": "route_controller",
      "post": {
        "tags": [
          "Route"
        ],
        "summary": "Add a array route from the system",
        "description": "",
        "operationId": "route_create_array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of route array object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrayRoute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/route/delete/{route_id}": {
      "x-swagger-router-controller": "route_controller",
      "delete": {
        "tags": [
          "Route"
        ],
        "summary": "Remove a route from the system",
        "description": "",
        "operationId": "route_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "route_id",
            "description": "Remove a route related this route id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/route/update/{route_id}": {
      "x-swagger-router-controller": "route_controller",
      "put": {
        "tags": [
          "Route"
        ],
        "summary": "Update a route on the system",
        "description": "",
        "operationId": "route_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "route_id",
            "description": "Update a route related this route id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The route object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Route"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/settings/retrieve": {
      "x-swagger-router-controller": "settings_controller",
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieve settings from the system",
        "description": "",
        "operationId": "settings_retrieve",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/settings/update": {
      "x-swagger-router-controller": "settings_controller",
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "update settings from the system",
        "description": "",
        "operationId": "settings_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The setting object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Setting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/retrieve/{supplier_id}": {
      "x-swagger-router-controller": "supplier_controller",
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieve a supplier from the system",
        "description": "",
        "operationId": "supplier_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier_id",
            "description": "Retrieve supplier related this supplier id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/retrieve/duns/{supplier_duns}": {
      "x-swagger-router-controller": "supplier_controller",
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieve a supplier from the system",
        "description": "",
        "operationId": "supplier_read_by_duns",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier_duns",
            "description": "Retrieve supplier related this supplier duns",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/retrieve/duns/{duns}/name/{name}": {
      "x-swagger-router-controller": "supplier_controller",
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retreive a supplier from the system by name and duns",
        "description": "",
        "operationId": "supplier_read_by_dunsAndSupplier",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Retrieve supplier related this supplier name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "duns",
            "description": "Retrieve supplier related this supplier duns",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "supplier_controller",
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieve all suppliers from the system with pagination",
        "description": "",
        "operationId": "supplier_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of suppliers that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve supplier related this page",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/list/all": {
      "x-swagger-router-controller": "supplier_controller",
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieve all suppliers from the system ",
        "description": "",
        "operationId": "supplier_list_all",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/create": {
      "x-swagger-router-controller": "supplier_controller",
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Add a new supplier to the system",
        "description": "",
        "operationId": "supplier_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of supplier object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/delete/{supplier_id}": {
      "x-swagger-router-controller": "supplier_controller",
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Remove a supplier from the system",
        "description": "",
        "operationId": "supplier_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier_id",
            "description": "Remove supplier related this supplier id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/supplier/update/{supplier_id}": {
      "x-swagger-router-controller": "supplier_controller",
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update a supplier from the system",
        "description": "",
        "operationId": "supplier_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplier_id",
            "description": "update a supplier related this supplier id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The supplier object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/retrieve/{tags_id}": {
      "x-swagger-router-controller": "tags_controller",
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Retreive a tag from the system",
        "description": "",
        "operationId": "tags_read",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tags_id",
            "description": "Retrieve a tag related this tag id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/list/pagination/{limit}/{page}": {
      "x-swagger-router-controller": "tags_controller",
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Retrieve all tags from the system with pagination that were binded and no binded with packings",
        "description": "",
        "operationId": "tags_list_pagination",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "The limit of tagss that will be returned",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "description": "Retrieve tags related this page",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "attr",
            "description": "Retrieve tags related this supplier id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/list/all/nobinded": {
      "x-swagger-router-controller": "tags_controller",
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Retrieve all tags from the system that does not was still binded with the packing",
        "description": "",
        "operationId": "tags_list_all_no_binded",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/create": {
      "x-swagger-router-controller": "tags_controller",
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Add a new tags to the system",
        "description": "",
        "operationId": "tags_create",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of tag object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/create/array": {
      "x-swagger-router-controller": "tags_controller",
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Add a array of tags on the system",
        "description": "",
        "operationId": "tags_create_array",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample of array tags object that will be add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrayTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/delete/{tags_id}": {
      "x-swagger-router-controller": "tags_controller",
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Remove a tags from the system",
        "description": "",
        "operationId": "tags_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tags_id",
            "description": "Remove tag related this tag id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tags/update/{tags_id}": {
      "x-swagger-router-controller": "tags_controller",
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update a tag from the system",
        "description": "",
        "operationId": "tags_update",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tags_id",
            "description": "Update tag related this tag id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The tag object that will be modified",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Error400"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Alert": {
      "type": "object",
      "properties": {
        "actual_plant": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "correct_plant": {
          "type": "string"
        },
        "packing": {
          "type": "string"
        },
        "supplier": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "hashpacking": {
          "type": "string"
        }
      }
    },
    "Department": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "plant": {
          "$ref": "#/definitions/Plant"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lng": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "name",
        "lat",
        "lng",
        "plant"
      ]
    },
    "ArrayDepartment": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Department"
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "jsonapi": {
          "type": "object",
          "description": "a API version"
        },
        "name": {
          "type": "string",
          "description": "error type"
        },
        "message": {
          "type": "string",
          "description": "a short comment about the error"
        },
        "error": {
          "type": "object",
          "description": "details about the error"
        },
        "details": {
          "type": "string",
          "description": "especific details about the error"
        }
      },
      "required": [
        "jsonapi"
      ]
    },
    "Error400": {
      "type": "object",
      "properties": {
        "jsonapi": {
          "type": "object",
          "description": "a API version"
        },
        "name": {
          "type": "string",
          "description": "error type"
        },
        "message": {
          "type": "string",
          "description": "a short comment about the error"
        },
        "error": {
          "type": "object",
          "description": "details about the error"
        },
        "details": {
          "type": "string",
          "description": "especific details about the error"
        }
      },
      "required": [
        "jsonapi"
      ]
    },
    "Error500": {
      "type": "object",
      "properties": {
        "jsonapi": {
          "type": "object",
          "description": "a API version"
        },
        "name": {
          "type": "string",
          "description": "error type"
        },
        "message": {
          "type": "string",
          "description": "a short comment about the error"
        },
        "error": {
          "type": "object",
          "description": "details about the error"
        },
        "details": {
          "type": "string",
          "description": "especific details about the error"
        }
      },
      "required": [
        "jsonapi"
      ]
    },
    "GC16": {
      "type": "object",
      "properties": {
        "annualVolume": {
          "type": "integer"
        },
        "capacity": {
          "type": "integer"
        },
        "productiveDays": {
          "type": "integer"
        },
        "containerDays": {
          "type": "integer"
        }
      }
    },
    "HistoricPackings": {
      "type": "object",
      "properties": {
        "packing": {
          "type": "string"
        },
        "historic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/historicpacking"
          }
        }
      }
    },
    "historicpacking": {
      "type": "object",
      "properties": {
        "plant": {
          "type": "string"
        }
      }
    },
    "Logistic_operator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "PackingHash": {
      "type": "object",
      "properties": {
        "hashPacking": {
          "type": "string"
        }
      }
    },
    "Packing": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "weigth": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "heigth": {
          "type": "number",
          "format": "double"
        },
        "length": {
          "type": "number",
          "format": "double"
        },
        "capacity": {
          "type": "integer"
        },
        "tag": {
          "$ref": "#/definitions/Tag"
        },
        "code_tag": {
          "type": "string"
        },
        "supplier": {
          "$ref": "#/definitions/SupplierUtil"
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "serial": {
          "type": "string"
        }
      }
    },
    "Plant": {
      "type": "object",
      "properties": {
        "plant_name": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lng": {
          "type": "number",
          "format": "double"
        },
        "location": {
          "type": "string"
        }
      },
      "required": [
        "plant_name",
        "lat",
        "lng"
      ]
    },
    "ArrayPlant": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Plant"
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "profile": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "cellphone": {
          "type": "string"
        },
        "cep": {
          "type": "string"
        },
        "neighborhood": {
          "type": "string"
        },
        "uf": {
          "type": "string"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ArrayProject": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Project"
      }
    },
    "ArrayRoute": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Route"
      }
    },
    "Route": {
      "type": "object",
      "properties": {
        "supplier": {
          "$ref": "#/definitions/SupplierUtil"
        },
        "plant_factory": {
          "$ref": "#/definitions/Plant"
        },
        "plant_supplier": {
          "$ref": "#/definitions/Plant"
        },
        "packing_code": {
          "type": "string"
        }
      }
    },
    "Setting": {
      "type": "object",
      "properties": {
        "battery_level": {
          "type": "number"
        },
        "clean": {
          "type": "number"
        },
        "range_radius": {
          "type": "number",
          "format": "double"
        },
        "register_gc16": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "id": {
              "type": "string"
            }
          }
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "jsonapi": {
          "type": "object",
          "description": "a API version"
        }
      },
      "required": [
        "jsonapi"
      ]
    },
    "Supplier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "duns": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/Profile"
        },
        "plant": {
          "$ref": "#/definitions/Plant"
        }
      }
    },
    "SupplierUtil": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "duns": {
          "type": "string"
        }
      }
    },
    "ArraySupplier": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "ArrayTag": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  }
}