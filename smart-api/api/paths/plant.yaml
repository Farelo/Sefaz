paths:
#-------------------------------------------START CRUD PLANT----------------------------------
  /plant/retrieve/{plant_id}:
      x-swagger-router-controller: plant_controller
      get:
        tags:
          - "Plant"
        summary: "Get a plant on the system"
        description: ""
        operationId: plant_read
        security:
          - Bearer: []
        parameters:
        - in: "path"
          name: "plant_id"
          description: "The code that needs to be fetched"
          required: true
          type: string
        responses:
          200:
            description: "Successfully"
            schema:
              $ref: "#/definitions/SuccessResponse"
          400:
            description: "Client Error"
            schema:
              $ref: "#/definitions/Error400"
          500:
            description: "Server Error"
            schema:
              $ref: "#/definitions/Error500"
          default:
            description: "Error"
            schema:
              $ref: "#/definitions/ErrorResponse"
  /plant/retrieve/name/{plant_name}:
      x-swagger-router-controller: plant_controller
      get:
        tags:
          - "Plant"
        summary: "Get a plant on the system by plant name"
        description: ""
        operationId: plant_read_by_name
        security:
          - Bearer: []
        parameters:
        - in: "path"
          name: "plant_name"
          description: "The plant_name that needs to be fetched"
          required: true
          type: string
        responses:
          200:
            description: "Successfully"
            schema:
              $ref: "#/definitions/SuccessResponse"
          400:
            description: "Client Error"
            schema:
              $ref: "#/definitions/Error400"
          500:
            description: "Server Error"
            schema:
              $ref: "#/definitions/Error500"
          default:
            description: "Error"
            schema:
              $ref: "#/definitions/ErrorResponse"
  /plant/list/pagination/{limit}/{page}:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Get all plants on the system by pagination"
      description: ""
      operationId: plant_listPagination
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "limit"
        description: "The limit of plants that will be returned"
        required: true
        type: string
      - in: "path"
        name: "page"
        description: "The especific page that returns plants related a this page"
        required: true
        type: string
      - in: "query"
        name: "attr"
        description: "The especific attr that returns packings related a this attr"
        required: false
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/nobinded/{code}/{supplier}/{project}:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Get all plants on the system no binded anyone route"
      description: ""
      operationId: list_all_nobinded
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "code"
        description: "The limit of plants that will be returned"
        required: true
        type: string
      - in: "path"
        name: "supplier"
        description: "The especific page that returns plants related a this page"
        required: true
        type: string
      - in: "path"
        name: "project"
        description: "The especific project that returns plants related a this page"
        required: true
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/all:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Get all plants on the system without supplier and logistic operator"
      description: ""
      operationId: list_all
      security:
        - Bearer: []
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/general:
    x-swagger-router-controller: plant_controller
    get:
      tags:
        - "Plant"
      summary: "Get all plants on the system"
      description: ""
      operationId: list_all_general
      security:
        - Bearer: []
      parameters:
      - in: "query"
        name: "attr"
        description: "The especific supplier that returns packings related a this supplier"
        required: false
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/list/general/logistic:
    x-swagger-router-controller: plant_controller
    post:
      tags:
        - "Plant"
      summary: "Get all plants on the system by logistic"
      description: ""
      operationId: list_all_general_logistic
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Array of supplier that needs to be fatched "
        required: true
        schema:
          $ref: "#/definitions/ArraySupplier"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/create:
    x-swagger-router-controller: plant_controller
    post:
      tags:
      - "Plant"
      summary: "Add a new plant to the system"
      description: ""
      operationId: plant_create
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Plant object that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/Plant"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/create/array:
    x-swagger-router-controller: plant_controller
    post:
      tags:
      - "Plant"
      summary: "Add a array of plant to the system"
      description: ""
      operationId: plant_create_array
      security:
        - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        description: "Plant array that needs to be added to the system"
        required: true
        schema:
          $ref: "#/definitions/ArrayPlant"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"


  /plant/delete/{plant_id}:
    x-swagger-router-controller: plant_controller
    delete:
      tags:
      - "Plant"
      summary: "Remove a plant on the system"
      description: ""
      operationId: plant_delete
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "plant_id"
        description: "The code that needs to be fetched"
        required: true
        type: string
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /plant/update/{plant_id}:
    x-swagger-router-controller: plant_controller
    put:
      tags:
      - "Plant"
      summary: "Update a plant on the system"
      description: ""
      operationId: plant_update
      security:
        - Bearer: []
      parameters:
      - in: "path"
        name: "plant_id"
        description: "The code that needs to be fetchede"
        required: true
        type: string
      - in: "body"
        name: "body"
        description: "The plant object that will to be modified"
        required: true
        schema:
          $ref: "#/definitions/Plant"
      responses:
        200:
          description: "Successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        400:
          description: "Client Error"
          schema:
            $ref: "#/definitions/Error400"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error500"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/ErrorResponse"

#-------------------------------------------FINISH CRUD PLANT----------------------------------
